@{
  Layout = "_Layout";
}

@using RecipeBox.Models
@model RecipeBox.Models.Recipe

<div class="recipeLayout">
  <div class="title">
    @Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)
  </div>
  <div class="rating">
    @Html.DisplayNameFor(model => model.Rating): 
      @for (int i=Model.Rating;i>0;i--)
      {
        <span>‚≠ê</span>
      }
  </div>

  <div class="ingredients">
    @Html.DisplayNameFor(model => model.Ingredients): @Html.DisplayFor(model => model.Ingredients)
  </div>

  <div class="instructions">
    <h3>@Html.DisplayNameFor(model => model.Instructions): @Html.DisplayFor(model => model.Instructions)</h3>
  </div>

  @if(@Model.JoinEntities.Count == 0)
  {
    <p>This recipe does not have any tags yet!</p>
  }
  else
  {
    <div class="tags">
      <h4>This recipe has the following tags:</h4>
        @foreach(TagRecipe join in Model.JoinEntities)
        {
          @join.Tag.Title
          @using (Html.BeginForm("DeleteJoin", "Recipes"))
          {
            @Html.Hidden("joinId", @join.TagRecipeId)
            <input type="submit" value="Delete"/>
          }
        }
    </div>
  }
</div>

<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Edit Recipe", "Edit", new { id = Model.RecipeId })</p>
<p>@Html.ActionLink("Add a Tag", "AddTag", new { id = Model.RecipeId })</p>
<p>@Html.ActionLink("Delete Recipe", "Delete", new { id = Model.RecipeId })</p>